import pytest
from main import calculate


class TestCalculate:
    def test_nothing(self):
        assert calculate('', '') in ['Please, enter a number', 'Por favor, introduzca un número', '请输入数字', 'Пожалуйста, введите число']

    def test_int(self):
        assert calculate('4', '0') == '±2'
        assert calculate('8', '3') == '±2.828'

    def test_float(self):
        assert calculate('5.98', '7') == '±2.4454039'

    def test_complex_num(self):
        assert calculate('-4', '1') == '±2j'
        assert calculate('4 + 5j', '3') == '±2.28∓1.096j'
        assert calculate('5j + 4', '3') == '±2.28∓1.096j'

    def test_null(self):
        assert calculate('0', '') == '0'


    def test_string(self):
        assert calculate('j', '1') in ['Please, enter a number', 'Por favor, introduzca un número', '请输入数字', 'Пожалуйста, введите число']


    def test_pre_float(self):
        assert calculate('9', '8.9') in ['Incorrect input', 'Entrada incorrecta', '输入不正确', 'Неверный ввод']


    def test_big_num(self):
        assert calculate('463182073883243575600672654742789008273106721405889356090735066167890200354823625234070761267'
                         '570479480388325849766416656497114261186472045604838178871242386008659894423815936905472904188'
                         '627994537245505498912796696520093373741671608559449076011367252894363335842621486001974511701'
                         '293232546313548145504093721481855817328947750652395111565656638286414054129909212200596629062'
                         '179564984335237226485846936936016186171516672425539221727732160146893184666925580263416970760'
                         '914554447185172378419727355019998763552385842341704297626082477099358085273295179189482906261'
                         '535948201718175455475601811722568805473949698761195844649754236036580837476096224249623676350'
                         '233494670271671253910446263360052771799851763565228610618726782933755009296609921450091671184'
                         '242112732122746366080001787759286193464839215716464228000040892557276565753934262769974304223'
                         '715093077728331094435552187050028188289310784407775540964578610736983028932025608057034904121'
                         '584625343980092955291085461112823974567845689954483599044279232421888598900686503194524321824'
                         '0238466103031329248062120973437411258195970685601757120248131524642081856', '0') == '±6805' \
                         '748113787664824824148586441641948265022563078864187866363890785630580126678754515259810742450' \
                        '3316701887749720220603415974959561242770647206405075854693761748645436474693912889174270087450' \
                         '52420187430188114406377424656539317120978561310694089656565855014589638299790500028081992971' \
                          '75541261929124359588813330155700589805894218833579999564178644064160647844216396245778818720' \
                           '6957949255555008049687174264462622037629715390810713254622897505749820113995516386757889875' \
                           '8090850986317974370013630474749530052454762925065538161450906977368449669946613816'
